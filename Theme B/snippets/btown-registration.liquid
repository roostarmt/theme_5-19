{% comment %}SC Product Options - Fix missing text input attributes not being passed to order object{% endcomment %}
<div class="col-12 pattern-bg" data-custom-options-wrapper>
  <div class="text-center title">ENTER REGISTRATION NUMBER</div>
  
  <!-- REGISTRATION NUMBER PREVIEW -->
  <div class="artboard">
    <div class="preview full-width">
      <input id="text-input" class="input action_disable Anton" name="properties[Registration Number]" autocomplete="off" spellcheck="false" 
             pattern=".{10,15}" maxlength="15" value="TYPE HERE" autofocus required
             style="font-weight: normal;">
      <span class="error-message text-center hidden">
        Text must be within 10 to 15 characters
      </span>
    </div>
  </div>
  <script>
  var input = document.getElementById("text-input");
  var clicked = false;
  input.addEventListener("click", function() {
    if (!clicked) {
      input.value = "";
      clicked = true;
    }
  });
</script>
  <!-- REGISTRATION NUMBER TEXT OPTIONS -->
  <div class="options-wrapper" >
    <div class="controls">
      <!-- FONTS SELECTOR -->
      <span class="control-font-container">
        <label for="control-font">Font choice</label>
        <div class="Select control-font-select has-value Select--single">
          <div class="Select-control form-group">
            <select id="text-font" class="form-control" name="properties[Font Style]">
                
                <option title='Anton' class='Anton' value='Anton' selected='selected'>Anton</option>
                <option title='Righteous' class='Righteous' value='Righteous'>Righteous</option>
                <option title='Russo One' class='Russo-One' value='Russo One'>Russo One</option>
                <option title='Bungee' class='Bungee' value='Bungee'>Bungee</option>
                <option title='Audiowide' class='Audiowide' value='Audiowide'>Audiowide</option> 
                <option title='Staatliches' class='staatliches-regular' value='Staatliches'>Staatliches</option>
                <option title='Black Ops One' class='Black-Ops-One' value='Black Ops One'>Black Ops One</option>
                <option title='Roboto' class='roboto' value='Roboto'>Roboto</option>
                <option title='Radio Canada' class='radio-canada' value='Radio Canada'>Radio Canada</option>
                <!-- DEACTIVATE FONTS
                <option title='asphalt' class='asphalt' value='asphalt'>Asphalt Black</option> 
                <option title='Black Ops One' class='Black-Ops-One' value='Black Ops One' selected='selected'>Black Ops One</option>
                <option title='Ceviche One' class='Ceviche-One' value='Ceviche One'>Ceviche One</option>
                <option title='Changa One' class='Changa-One' value='Changa One'>Changa One</option>
                <option title='Creepster' class='Creepster' value='Creepster'>Creepster</option>
                <option title='Edsmarket' class='Edsmarket' value='Edsmarket'>Edsmarket</option>
                <option title='Fugaz One' class='Fugaz-One' value='Fugaz One'>Fugaz One</option>
                <option title='ganache' class='ganache' value='Ganache'>Ganache</option>
                <option title='Graduate' class='Graduate' value='Graduate'>Graduate</option>
                <option title='Gyparody' class='Gyparody' value='Gyparody'>Gyparody</option>
                <option title='Orbitron' class='Orbitron' value='Orbitron'>Orbitron</option>
                <option title='Ruslan Display' class='Ruslan-Display' value='Ruslan Display'>Ruslan Display</option>
                <option title='Yellowtail' class='Yellowtail' value='Yellowtail'>Yellowtail</option>
                <option title='Sarina' class='Sarina' value='Sarina'>Sarina</option>
                <option title='SeaDog' class='SeaDog' value='SeaDog'>SeaDog</option>
                <option title='Shojumaru' class='Shojumaru' value='Shojumaru'>Shojumaru</option>
                <option title='Shrikhand' class='Shrikhand' value='Shrikhand'>Shrikhand</option>
                <option title='Stalinist One' class='Stalinist-One' value='Stalinist One'>Stalinist One</option>
                <option title='Timmana' class='Timmana' value='Timmana'>Timmana</option>
                <option title='Viga' class='Viga' value='Viga'>Viga</option>
                -->
            </select>
            <input id="text-font-data" type="hidden" value="Black Ops One">
          </div>
        </div>
      </span>
      <!-- COLORS SELECTORS -->
      <span>
        <!--  <label>Color <input type="text" id="text-color-data" value="White" name="properties[Text Color]" onkeydown="return false"></label> -->
        <label>Fill Color</label>
        <input type="color" id="text-color-html5" class="form-control color-input" value="#ffffff">
      </span>
      <span>
        <!--  <label>Outline <input type="text" id="text-outline-data" value="Black" name="properties[Outline Color]" onkeydown="return false"></label> -->
        <label>Outline Color</label>
        <input type="color" id="text-outline-html5" class="form-control color-input" value="#000000">
      </span>
      <!-- OUTLINE SIZE -->
      <span>
        <label>Outline Size</label>
        <input id="text-outline-size" name="properties[Outline Size]" type="number" min="0" max="5" class="form-control" value="3">
      </span>
    </div>
  </div>
</div>

<style>
  .text-center {
    text-align: center !important;
    font-size: 1.8rem;
  }
  label {
    color: #000000;
    text-transform: uppercase;
    font-weight: 300;
  }
  .label:not(.variant__button-label):not(.text-label) {
    text-transform: uppercase;
    font-size: 1.2rem;
  }
  .color-preview {
    width: 80px;
    height: 34px;
    padding: 6px 12px;
    border: 1px solid #ccc;
    border-radius: 4px;
  }
  .roboto {
    font-family: "Roboto", serif;
    font-style: italic;
  }

.staatliches-regular {
  font-family: "Staatliches", serif;
  font-weight: 400;
  font-style: normal;
}

// <uniquifier>: Use a unique and descriptive class name

.radio-canada {
  font-family: "Radio Canada", serif;
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: italic;
  font-variation-settings:
    "wdth" 100;
}

  .Black-Ops-One {
    font-family: 'Black Ops One', cursive;
  }
  .Anton {
    font-family: 'Anton', sans-serif;
  }
  .Audiowide {
    font-family: 'Audiowide', cursive;
  }
  .Baumans {
    font-family: 'Baumans', cursive;
  }
  .Bowlby-One {
    font-family: 'Bowlby One',cursive;
  }
  .Bowlby-One-SC {
    font-family: 'Bowlby One SC',cursive;
  }
  .Bungee {
    font-family: 'Bungee',cursive;
  }
  .Ceviche-One {
    font-family: 'Ceviche One', cursive;
  }
  .Changa-One {
    font-family: 'Changa One', cursive;
  }
  .Creepster {
    font-family: 'Creepster', cursive;
  }
  .East-Sea-Dokdo {
    font-family: 'East Sea Dokdo', cursive;
  }
  .Graduate {
    font-family: 'Graduate', cursive;
  }
  .Fugaz-One{
    font-family: 'Fugaz One', cursive;
  }
  .Iceland {
    font-family: 'Iceland', cursive;
  }
  .Orbitron {
    font-family: 'Orbitron', sans-serif;
  }
  .Ruslan-Display {
    font-family: 'Ruslan Display', cursive;
  }
  .Russo-One {
    font-family: 'Russo One', sans-serif;
  }
  .Righteous {
    font-family: 'Righteous', cursive;
  }
  .Yellowtail {
  font-family: 'Yellowtail', cursive;
  }
  .Sarina {
    font-family: 'Sarina', cursive;
  }
  .Sarpanch {
    font-family: 'Sarpanch', sans-serif;
  }
  .SeaDog {
    font-family: 'Sea-Dog';
    font-weight: normal;
    font-style: normal;
  }
  .Share-Tech-Mono {
    font-family: 'Share Tech Mono', monospace;
  }
  .Shojumaru {
    font-family: 'Shojumaru', cursive;
  }
  .Shrikhand {
    font-family: 'Shrikhand', cursive;
  }
  .Stalinist-One {
    font-family: 'Stalinist One', cursive;
  }
  .Timmana {
    font-family: 'Timmana', sans-serif;
  }
  .Viga {
    font-family: 'Viga', sans-serif;
  }
  .Yesteryear {
    font-family: 'Yesteryear', cursive;
  }

  .asphalt {
  font-family: "asphalt", sans-serif;
  font-weight: 800;
  font-style: normal;
  }

.Gyparody {  
  font-family: "gyparody", sans-serif;
  font-weight: 900;
  font-style: normal;
  }

.Edsmarket {
  font-family: "eds-market-bold", sans-serif;
  font-weight: 400;
  font-style: normal;
}

.ganache {
  font-family: "ganache", sans-serif;
  font-weight: 400;
  font-style: normal;
}


  .pattern-bg{
    margin-bottom: 4rem;
    padding-top: 50px;
    padding-bottom: 3rem;   
    background: url("https://cdn.shopify.com/s/files/1/1783/9041/files/checker-pattern.svg?672") #505050;
    transition: background 1s ease;
  }
  .title{
    position:relative;
    margin:0 auto;
    padding:2rem 20px 0 20px;
    width:100%;
    max-width:1000px;
    font-size:1.3rem;
    color:#fff;
  }
  .artboard{
    position:relative;
    margin:10px 0 40px;
    min-height:200px;
  }
  .preview .output {
    display: inline-block;
    position: absolute;
    visibility: hidden;
    left: -10000px;
    line-height: 1;
    white-space: pre;
  }
  .canvas{
    display:none;
  }
  .preview .input {
    position: absolute;
    top: 50%;
    left: 50%;
    padding: 0;
    height:auto;
    width: 100%;
    border: 0;
    outline: 0;
    transform: translate(-50%,-50%);
    background: 0 0;
    text-align: center;
    color:#ffffff;
    font-size:13rem;
    text-shadow: 3px 3px 0 #000,-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
    -webkit-text-stroke: 0px #000;
  }
  .preview .input.SeaDog{
    font-size: 10rem;
  }
  
  .options-wrapper{
    position: relative;
    margin: 0 auto;
    padding: 0 20px;
    width: 100%;
    max-width: 1000px;
  }
  
  .controls{
    display:flex;
    justify-content:space-evenly;
    flex-wrap:wrap;
    padding: .5rem;
    background:#fff;
    border-radius:6px;
    box-shadow:0 0 0 1px rgba(0,0,0,.1);
  }
  .form-control{
    display: block;
    width: 100%;
    height: 34px;
    padding: 6px 12px;
    font-size: 14px;
    line-height: 1.42857143;
    color: #555;
    background-color: #fff;
    background-image: none;
    border: 1px solid #ccc;
    border-radius: 4px;
    -webkit-box-shadow: inset 0 1px 1px rgb(0 0 0 / 8%);
    box-shadow: inset 0 1px 1px rgb(0 0 0 / 8%);
    -webkit-transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;
    -o-transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
    transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
  }
  .color-input{
    width:80px;
  }
  #text-color{
    background-color:#FFFFFF;
  }
  #text-outline{
    background-color:#000000;
  }
  
  .huebee__cursor {
    width: 25px;
    height: 25px;
  }
  .huebee__container {
    border: 4px solid #222;
    border-radius: 0;
  }
  
  .error-message {
    position: absolute;
    bottom: -8%;
    left: 25%;
    right: 25%;
    padding: 5px;
    color: white;
    border: 2px solid red;
    display:none;
  }
  .full-width{
    width:100%;
  }
  .ui-autocomplete{
    display: none !important;
  }
  @media only screen and (max-width: 959px) {
    .artboard input{
      font-size: 45px !important;
    }
  }
  
  @media only screen and (max-width: 801px) {
    .artboard{
      margin:0;
      min-height:180px;
    }
  }
  @media only screen and (max-width: 501px) {
    .artboard{
      min-height:150px;
    }

    @media only screen and (max-width: 600px) {
      #text-color-data, text-outline-data {
        display: none;
      }
    }
    
    .options-wrapper{
      padding:2rem;
    }
    #text-input{
      font-size:5rem;
    }
    .controls span,
    .color-input{
      width:100%;
    }
    .controls span{
      margin-bottom:1rem;
    }
    .artboard input{
      font-size: 40px !important;
    }
  }  
</style>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

<script>
  var textColorPicker = {},
      textOutlinePicker = {};
var COLORS_NAME = [
"Can-Am Sea-Doo Blue", 
"SCS W Blue", 
"Sea-Doo Dark Blue", 
"Octane Blue", 
"Cyan", 
"LYNX Cyan", 
"Panama Turquoise", 
"Iceberg Blue", 
"Teal M ", 
"Reef Blue", 
"Turquoise ", 
"White", 
"Catalyst Grey ", 
"Can-Am Silver", 
"Catalyst  Dark Grey", 
"Defender Grey", 
"Can-Am Maverick Grey ", 
"Steel Grey", 
"Sport Grey ", 
"Charcoal Grey", 
"Eclipise Grey", 
"Can-Am Dark Grey", 
"SCS W Blue Black", 
"Black", 
"Light Blue", 
"Arctic Cat Orange / KTM / Polaris Burst", 
"Unlimited Lava / Can-Am Red / Trixx Red", 
"Blaze Orange", 
"Red Orange", 
"True Red / Polaris Red", 
"Honda Red / LYNX Red", 
"Lava Dark Red", 
"Chile Peper Red", 
"M.O.T Red", 
"R.B. Pink", 
"Sea-Doo Magenta", 
"D.S Pink", 
"Rhodamine", 
"Arctic Cat Purple", 
"Violet", 
"Midnight Purple", 
"Yahmaha BLue", 
"Vintage Polaris Dark Blue", 
"R.B Motorsports Blue ", 
"Ski-Doo Dark Blue", 
"Labrador", 
"Oxford Blue", 
"Dazzaling Blue", 
"Sea-Doo Belize Blue", 
"Scandi Blue", 
"Spartan Red ", 
"Platinum Silver", 
"Neo Mint", 
"Gris Silex", 
"Coastal Grey ", 
"Apricot Crush", 
"Gulfstream Blue", 
"Vapor Blue", 
"Dusty Navy", 
"Timeless Black", 
"Hybrid White", 
"Polaris Lime Squeeze", 
"Manta Green", 
"Dayglow", 
"Vintage Manta Green", 
"Arctic Cat Green", 
"Vintage Arctic Cat Green", 
"Quetzal Green", 
"Army Green", 
"Ski-Doo Gold", 
"Can-Am Gold", 
"Polaris Glow", 
"Liquid Titanium", 
"Arctic Tan / Desert Tan", 
"LYNX Titanium", 
"Nuclear Yellow", 
"Neo Yellow", 
"Sunburst Yellow - Ski-doo / Sea-Doo / Can-Am", 
"Vintage Ski-doo", 
"Vintage Ski-Doo Yellow", 
"RB Yellow", 
"Millennium Yellow", 
"Can-Am Yellow", 
"Orange Crush", 
"Orange Phoenix", 
"Ski-Doo Dark Orange"
];


var COLORS_VALS = [
"#008bce", 
"#0074c5", 
"#007dba", 
"#0091da", 
"#00acec", 
"#17a4cc", 
"#004f59", 
"#00778b", 
"#0091b3", 
"#2db1bd", 
"#00c7d1", 
"#ffffff", 
"#c8cacc", 
"#bbbab9", 
"#88898c", 
"#777677", 
"#797c81", 
"#6a6c70", 
"#716e6a", 
"#434244", 
"#4e4b48", 
"#323232", 
"#1a1e25", 
"#000000", 
"#aee6ff", 
"#d75d18", 
"#d63205", 
"#dc4410", 
"#ff0000", 
"#da0002", 
"#cc2229", 
"#c61f15", 
"#772935", 
"#de2d32", 
"#c2214d", 
"#ce0076", 
"#ed008c", 
"#e10098", 
"#69488e", 
"#440099", 
"#291844", 
"#0b0dae", 
"#162667", 
"#2d396b", 
"#2a385d", 
"#183165", 
"#005297", 
"#043bff", 
"#006298", 
"#567a9b", 
"#8e2631", 
"#75726e", 
"#99cccc", 
"#b1b3b3", 
"#75787b", 
"#fead77", 
"#007dba", 
"#a5b0e3", 
"#1b365d", 
"#2e2c26", 
"#d9d9d6", 
"#dae343", 
"#ddf84a", 
"#ddfc4a", 
"#c0df16", 
"#b8f63b", 
"#5bc500", 
"#00b176", 
"#5b6236", 
"#a49764", 
"#b2945e", 
"#b4875e", 
"#7d725b", 
"#b5a588", 
"#a39d88", 
"#dee829", 
"#dbe442", 
"#fcf73a", 
"#fdee00", 
"#f5d130", 
"#f5d230", 
"#ffc41d", 
"#e4a612", 
"#ff9d00", 
"#d8752d", 
"#ff6d00", 
"#d6692e", 
"#b3ae9b", 
];
  
$(document).ready(function(){
  // Initialize outline size based on screen width
  if (window.matchMedia("(max-width: 767px)").matches) {
    $('#text-outline-size').val("1");
  } else {
    $('#text-outline-size').val("3");    
  } 
  
  updateTextOutline($('#text-outline-size').val());

  // Track font changes
  $('#text-font').on('change', function(){
    var fontChoice = $('option:selected', this).val(),
        fontFamily = $('option:selected', this).attr('class');
    $('#text-font-data').val(fontChoice);
    $('#text-input').removeClass();
    $('#text-input').addClass("input " + fontFamily);
  });

  // Track color changes
  $('#text-color-html5').on('input', function() {
    var color = $(this).val();
    var closestColorIndex = findClosestColor(color);
    var colorName = COLORS_NAME[closestColorIndex];
    $('#text-color-data').val(colorName);
    $('#text-input').css('color', color);
  });
  
  // Track outline color changes
  $('#text-outline-html5').on('input', function() {
    var color = $(this).val();
    var closestColorIndex = findClosestColor(color);
    var colorName = COLORS_NAME[closestColorIndex];
    var outlineSize = $('#text-outline-size').val();
    $('#text-outline-data').val(colorName);
    updateTextOutlineWithColor(outlineSize, color);
  });

  // Track outline size changes
  $('#text-outline-size').on('change', function(){
    var newSize = $(this).val();
    var outlineColor = $('#text-outline-html5').val();
    updateTextOutlineWithColor(newSize, outlineColor);
  });

  // Set initial values
  var initialFont = $('#text-font').val();
  $('#text-font-data').val(initialFont);
  $('#text-input').addClass($('option[value="' + initialFont + '"]').attr('class'));

  var initialTextColor = $('#text-color-html5').val() || '#ffffff';
  var initialOutlineColor = $('#text-outline-html5').val() || '#000000';
  $('#text-input').css('color', initialTextColor);
  updateTextOutlineWithColor($('#text-outline-size').val(), initialOutlineColor);
});

function updateTextOutlineWithColor(size, color) {
  $("#text-input").css({
    "-webkit-text-stroke": size + "px " + color,
    "text-shadow": "-" + size + "px -" + size + "px 0 " + color + 
                   "," + size + "px -" + size + "px 0 " + color +
                   ",-"+ size + "px " + size + "px 0 " + color +
                   "," + size + "px " + size + "px 0 " + color
  });
}

function findClosestColor(hex) {
  var r = parseInt(hex.substr(1,2), 16);
  var g = parseInt(hex.substr(3,2), 16);
  var b = parseInt(hex.substr(5,2), 16);
  
  var minDistance = Number.MAX_VALUE;
  var closestIndex = 0;
  
  COLORS_VALS.forEach((color, index) => {
    var cr = parseInt(color.substr(1,2), 16);
    var cg = parseInt(color.substr(3,2), 16);
    var cb = parseInt(color.substr(5,2), 16);
    
    var distance = Math.sqrt(
      Math.pow(r - cr, 2) +
      Math.pow(g - cg, 2) +
      Math.pow(b - cb, 2)
    );
    
    if(distance < minDistance) {
      minDistance = distance;
      closestIndex = index;
    }
  });
  
  return closestIndex;
}
  
  function outlineSize(){
    if (window.matchMedia("(max-width: 767px)").matches) {
    $('#text-outline-size').val("1");
    }else{
      $('#text-outline-size').val("3");    
    }   
  }
  
  function initializeColorPicker(){
    var textColor = $('#text-color'),
        textOutline = $('#text-outline');
    textColorPicker = new Huebee('#text-color', {
      shades: -2,
      setText: false,
      notation: 'hex',
      saturations: 0,
      customColors: COLORS_VALS,
      className: 'text-color-picker'
    });
    textOutlinePicker = new Huebee('#text-outline', {
      shades: -2,
      setText: false,
      notation: 'hex',
      saturations: 0,
      customColors: COLORS_VALS,
      className: 'text-color-picker'
    });
  }
  function trackFontPicker(){
    $('#text-font').on('change', function(){
      var fontChoice = $('option:selected', this).val(),
          fontFamily = $('option:selected', this).attr('class');
      $('#text-font-data').val(fontChoice);
      $('#text-input').removeClass();
      $('#text-input').addClass("input " + fontFamily);
      console.log('Font selected:', fontChoice);
      console.log('Font family class:', fontFamily); 
    });
  }
  function trackColorPicker(){
    textColorPicker.on('change', function(color, hue, sat, lum){
      var colorName = COLORS_NAME[COLORS_VALS.indexOf(color)];
      $('#text-color-data').val(colorName);
      $('#text-input').css('color', color);
  });
    textOutlinePicker.on( 'change', function(color, hue, sat, lum){
      var colorName = COLORS_NAME[COLORS_VALS.indexOf(color)],
          outlineSize = $('#text-outline-size').val();
      $('#text-outline-data').val(colorName);
      console.log(outlineSize + "px " + colorName);
      $("#text-input").css({
        "-webkit-text-stroke": outlineSize + "px " + color,
        "text-shadow": "-" + outlineSize + "px -" + outlineSize + "px 0 " + color + 
                       "," + outlineSize + "px -" + outlineSize + "px 0 " + color +
                       ",-"+ outlineSize + "px " + outlineSize + "px 0 " + color +
                       "," + outlineSize + "px " + outlineSize + "px 0 " + color
      });
  });
  }
  function trackTextOutline(){
    $('#text-outline-size').on('change', function(){
      var newSize = $(this).val();
      updateTextOutline(newSize);
    });
  }
  function updateTextOutline(newSize){
    var outlineColor = COLORS_VALS[COLORS_NAME.indexOf($('#text-outline-data').val())];
    $("#text-input").css({
        "-webkit-text-stroke": newSize + "px " + outlineColor,
        "text-shadow": "-" + newSize + "px -" + newSize + "px 0 " + outlineColor + 
        "," + newSize + "px -" + newSize + "px 0 " + outlineColor +
        ",-"+ newSize + "px " + newSize + "px 0 " + outlineColor +
        "," + newSize + "px " + newSize + "px 0 " + outlineColor
    });
  }
  
  $(window).on('debouncedresize', mobileAdjustment);
</script>

<script type="text/javascript">
$(document).ready(function() {
  $('form.product-single__form').on('submit', function() {
    // Collect all custom properties
    var properties = {
      'Registration Number': $('#text-input').val(),
      'Font Style': $('#text-font-data').val(),
      'Text Color': $('#text-color-data').val(),
      'Outline Color': $('#text-outline-data').val(),
      'Outline Size': $('#text-outline-size').val()
    };

    // Remove any existing properties hidden input
    $(this).find('input[name="properties"]').remove();

    // Add properties as hidden input
    $('<input>').attr({
      type: 'hidden',
      name: 'properties',
      value: JSON.stringify(properties)
    }).appendTo(this);
  });
});
</script>
<script>
document.querySelector('form.product-single__form').addEventListener('submit', function(e) {
  const properties = {};
  document.querySelectorAll('[data-custom-options-wrapper] [name^="properties["]').forEach(input => {
    const key = input.name.match(/\[(.*?)\]/)[1];
    properties[key] = input.value;
  });
  const hiddenInput = document.createElement('input');
  hiddenInput.type = 'hidden';
  hiddenInput.name = 'properties';
  hiddenInput.value = JSON.stringify(properties);
  this.appendChild(hiddenInput);
});
</script>